<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

   <mapper namespace="mapper.member">
   <resultMap type="memberVO" id="memResult">
   		<result property="id" column="id" />
  		<result property="pwd" column="pwd" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="joinDate" column="joinDate" />
   </resultMap>
   
   <!-- sql태그와 include태그를 이용하여 중복을 제거 가능 -->
   <sql id="member">
   <![CDATA[select * from t_member]]>
   </sql>
   
   <select id="selectAllMemberList" resultMap="memResult" >
   <include refid="member" /> order by joinDate desc
   </select>
   
   <select id="selectMemberById" resultType="memberVO" parameterType="String"> 
   <include refid="member" /> 
   <!-- 동적 sql문 예시 >> if, choose, foreach태그를 이용하여 동적으로 sql문을 작성 할 수 있다. 874pg 참고..-->
   <where>
   <if test="id != '' and id != null">
   id=#{id}
   </if>
   </where>
   <!--#{}형식을 이용하여 매개변수를 받을 수 있고, 매개변수명과 인자명을 동일하게 해주어야한다 -->
   </select>
   
   <insert id="insertMember" parameterType="memberVO">
    <![CDATA[insert into t_member(id, pwd, name, email) values(#{id}, #{pwd}, #{name}, #{email})]]> 
   </insert>
   
   <update id="updateMember" parameterType="memberVO">
   <![CDATA[update t_member set pwd=#{pwd}, name=#{name}, email=#{email} where id=#{id}]]> 
   </update>
   
   <delete id="deleteMember" parameterType="String">
   <![CDATA[delete from t_member where id=#{id}]]> 
   </delete>
   </mapper>
   
   